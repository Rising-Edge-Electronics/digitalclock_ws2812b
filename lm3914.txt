#include <Wire.h>
#include <Adafruit_NeoPixel.h>
#include <RTClib.h>

#define LED_PIN 3
#define BTN 4
#define LED_COUNT 30

void printDateTime(DateTime dateTime);
RTC_DS1307 RTC;

Adafruit_NeoPixel strip(LED_COUNT, LED_PIN, NEO_GRB + NEO_KHZ800);

unsigned long currTime;
unsigned long startTime1,startTime2;

int pattern=1;

byte btnpressed=0;
long lastPressTime=0;

byte secs=0; //state of the secons LEDs

byte seccount=0;
byte mincount=0;


byte red[30]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
byte green[30]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
byte blue[30]={255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255};



byte patterns[35][3]={
{255,0,0},
{255,15,0},
{255,30,0},
{255,45,0},
{255,60,0},
{255,75,0},
{255,90,0},
{255,105,0},
{255,120,0},
{255,135,0},
{255,150,0},
{255,165,0},
{255,180,0},
{255,195,0},
{255,210,0},
{255,225,0},
{255,240,0},
{255,255,0},
{240,255,0},
{225,255,0},
{210,255,0},
{195,255,0},
{180,255,0},
{165,255,0},
{150,255,0},
{135,255,0},
{120,255,0},
{105,255,0},
{90,255,0},
{75,255,0},
{60,255,0},
{45,255,0},
{30,255,0},
{15,255,0},
{0,255,0}


};





//D3 D2 : D1 D0

byte zero[4][6]={
{23,24,25,26,27,29},
{16,17,18,19,20,22},
{7,8,9,10,11,13},
{0,1,2,3,4,6}
};

byte one[4][2]={

{27,29},
{20,22},
{11,13},
{4,6}
};

byte two[4][5]={
{23,25,26,28,29},
{16,18,19,21,22},
{7,9,10,12,13},
{0,2,3,5,6}
};

byte three[4][5]={
{23,26,27,28,29},
{16,19,20,21,22},
{7,10,11,12,13},
{0,3,4,5,6}

};


byte four[4][4]={
{24,27,28,29},
{17,20,21,22},
{8,11,12,13},
{1,4,5,6}
};

byte five[4][5]={
{23,24,26,27,28},
{16,17,19,20,21},
{7,8,10,11,12},
{0,1,3,4,5}
};

byte six[4][6]={
{23,24,25,26,27,28},
{16,17,18,19,20,21},
{7,8,9,10,11,12},
{0,1,2,3,4,5}
};

byte seven[4][3]={
{23,27,29},
{16,20,22},
{7,11,13},
{0,4,6}

};

byte eight[4][7]={
{23,24,25,26,27,28,29},
{16,17,18,19,20,21,22},
{7,8,9,10,11,12,13},
{0,1,2,3,4,5,6}
};

byte nine[4][6]={
{23,24,26,27,28,29},
{16,17,19,20,21,22},
{7,8,10,11,12,13},
{0,1,3,4,5,6}
};



void setup() {
Serial.begin(9600);
Wire.begin();
RTC.begin();

 strip.begin();
strip.show(); // Initialize all pixels to 'off'


pinMode(BTN, INPUT);

startTime1=millis();
startTime2=millis();

 // following line sets the RTC to the date & time this sketch was compiled
//RTC.adjust(DateTime(__DATE__, __TIME__));

Serial.println("---------- Rising Edge Electronics - Digital Clock 2021 ----------");
Serial.println("Enter the correct datetime in the format YYYY#MM#DD#hh#mm#ss");

}


int once=0;

void loop() {


//set time through serial monitor
//input format 2021#05#08#18#30#00
if (Serial.available() > 0) {
     
     String newtime = Serial.readString();

String newyear=newtime.substring(0,4);
String newmonth=newtime.substring(5,7);
String newday=newtime.substring(8,10);
String newhour=newtime.substring(11,13);
String newminute=newtime.substring(14,16);
String newsecond=newtime.substring(17,19);


RTC.adjust(DateTime(newyear.toInt(), newmonth.toInt(), newday.toInt(), newhour.toInt(), newminute.toInt(), newsecond.toInt()));


}






byte btnstate=digitalRead(BTN);

if(millis()-lastPressTime>50)
{

if(btnstate==1&&btnpressed==0)
{

if(pattern<11)
pattern+=1;
else
pattern=1;

  Serial.println(pattern);
  btnpressed=1;
  lastPressTime=millis();
}
else if(btnstate==0&&btnpressed==1)
{
  btnpressed=0;
   lastPressTime=millis();
}


}


currTime=millis();






DateTime now = RTC.now(); 
//printDateTime(now);


//this code is executed only once
if(once==0)
{
//clearAll();
//Serial.println(now.minute());
showMinutes(now.minute(),1);
 showHour(now.hour(),1);

seccount=now.second();
mincount=now.minute();

once=1;
}


if(currTime-startTime1 >500)
{
if(secs==0)
secs=1;
else
secs=0;

showSeconds(secs);
startTime1=millis();

clearMins();
 showMinutes(now.minute(),1);
clearHrs();
showHour(now.hour(),1);
 
}
strip.show();
}





void showSeconds(int action)
{
if(action==0)
{
strip.setPixelColor(14, red[14], green[14], blue[14]);
strip.setPixelColor(15, red[15], green[15], blue[15]);
}
else
{
strip.setPixelColor(14, 0, 0, 0);
strip.setPixelColor(15, 0, 0, 0);
}
}


void showMinutes(int min,int action)
{
int r=0;
if(min<10) //01,02,03..09
{
showD(0,min,1);
showD(1,0,1);
}
else
{
if(min>9&&min<20)
{
r=min%10;
showD(1,1,1);
}
 if(min>19&&min<30)
 {
r=min%20;
 showD(1,2,1);
 }
 if(min>29&&min<40)
 {
r=min%30;
showD(1,3,1);
 }
 if(min>39&&min<50)
 {
r=min%40;
 showD(1,4,1);
 }
if(min>49&&min<60)
{
r=min%50;
showD(1,5,1);
}


showD(0,r,1);

}

}

void showHour(int hrs,int action)
{

int r=0;
if(hrs<10) //01,02,03..09
{
showD(2,hrs,1);
showD(3,0,1);
}
else
{
if(hrs>9&&hrs<20)
{
r=hrs%10;
showD(3,1,1);
}
 if(hrs>19&&hrs<30)
 {
r=hrs%20;
 showD(3,2,1);
 }

showD(2,r,1);

}



}




void showD(int D,int val,int action) //D indicate wich digit from left //action=0-->clear , action=1--> show
{
switch(val)
{
case 0:
showZero(D,action);
break;
case 1:
showOne(D,action);
break;
case 2:
showTwo(D,action);
break;
case 3:
showThree(D,action);
break;
case 4:
showFour(D,action);
break;
case 5:
showFive(D,action);
break;
case 6:
showSix(D,action);
break;
case 7:
showSeven(D,action);
break;
case 8:
showEight(D,action);
break;
case 9:
showNine(D,action);
break;

}

}



void showZero(int i,int a)
{
for(int j=0;j<6;j++)
{
if(a==1)
strip.setPixelColor(zero[i][j], red[zero[i][j]], green[zero[i][j]], blue[zero[i][j]]);
if(a==0)
strip.setPixelColor(zero[i][j], 0, 0, 0);

}
}

void showOne(int i,int a)
{
for(int j=0;j<2;j++)
{
if(a==1)
strip.setPixelColor(one[i][j], red[one[i][j]],green[one[i][j]],blue[one[i][j]]);
if(a==0)
strip.setPixelColor(one[i][j], 0, 0, 0);

}
}

void showTwo(int i,int a)
{
 for(int j=0;j<5;j++)
{
if(a==1)
strip.setPixelColor(two[i][j], red[two[i][j]],green[two[i][j]],blue[two[i][j]]);
if(a==0)
strip.setPixelColor(two[i][j], 0, 0, 0);

}
}

void showThree(int i,int a)
{
for(int j=0;j<5;j++)
{
if(a==1)
strip.setPixelColor(three[i][j], red[three[i][j]],green[three[i][j]],blue[three[i][j]]);
if(a==0)
strip.setPixelColor(three[i][j], 0, 0, 0);

} 
}


void showFour(int i,int a)
{
 for(int j=0;j<4;j++)
{
if(a==1)
strip.setPixelColor(four[i][j],red[four[i][j]],green[four[i][j]],blue[four[i][j]]);
if(a==0)
strip.setPixelColor(four[i][j], 0, 0, 0);

}
}


void showFive(int i,int a)
{
 for(int j=0;j<5;j++)
{
if(a==1)
strip.setPixelColor(five[i][j], red[five[i][j]],green[five[i][j]],blue[five[i][j]]);
if(a==0)
strip.setPixelColor(five[i][j], 0, 0, 0);

}
}


void showSix(int i,int a)
{
 for(int j=0;j<6;j++)
{
if(a==1)
strip.setPixelColor(six[i][j],red[six[i][j]],green[six[i][j]],blue[six[i][j]]);
if(a==0)
strip.setPixelColor(six[i][j], 0, 0, 0);

}
}

void showSeven(int i,int a)
{
 for(int j=0;j<3;j++)
{
if(a==1)
strip.setPixelColor(seven[i][j],red[seven[i][j]],green[seven[i][j]],blue[seven[i][j]]);
if(a==0)
strip.setPixelColor(seven[i][j], 0, 0, 0);

}

}

void showEight(int i,int a)
{
 for(int j=0;j<7;j++)
{
if(a==1)
strip.setPixelColor(eight[i][j], red[eight[i][j]],green[eight[i][j]],blue[eight[i][j]]);
if(a==0)
strip.setPixelColor(eight[i][j], 0, 0, 0);

}
}


void showNine(int i,int a)
{
 for(int j=0;j<6;j++)
{
if(a==1)
strip.setPixelColor(nine[i][j],red[nine[i][j]],green[nine[i][j]],blue[nine[i][j]]);
if(a==0)
strip.setPixelColor(nine[i][j], 0, 0, 0);

}
}


void clearMins()
{
for(int i=16;i<30;i++)
{
 strip.setPixelColor(i, 0, 0, 0);

}
strip.show();
}

void clearHrs()
{
for(int i=0;i<14;i++)
{
 strip.setPixelColor(i, 0, 0, 0);

}
strip.show();
}


void clearAll() //clear all LED except seconds 14/15
{
for(int i=0;i<30;i++)
{
if(i!=14&&i!=15)
strip.setPixelColor(i, 0, 0, 0);

}

strip.show();
}


void changePattern(byte pattern)
{

if(pattern==1)
{

for(int i=0;i<30;i++)
{
  red[i]=0;green[i]=0;blue[i]=255;
}
 
}
if(pattern==2)
{
for(int i=0;i<30;i++)
{
  red[i]=255;green[i]=0;blue[i]=0;
}

}

if(pattern==3)
{


}

if(pattern==4)
{


}

if(pattern==5)
{


}

if(pattern==6)
{


}

if(pattern==7)
{


}

if(pattern==8)
{


}

if(pattern==9)
{


}

if(pattern==10)
{


}




}
